smg

const int n = 10;

global s: [0 .. (n+3)];
global p: [0 .. 1];

player defender
	[trap], [notrap]
endplayer

player attacker
	game
endplayer

module game
		[notrap] (s=0) & (p=0) -> 1.0 : (s'=0) & (p'=1);
		[trap] (s=0) & (p=0) -> 0.36566895282169365 : (s'=0) & (p'=1) + 0.6343310471783064 : (s'=11) & (p'=0);
		[] (s=0) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=0) & (p=1) -> 1.0 : (s'=3) & (p'=0);
		[] (s=0) & (p=1) -> 1.0 : (s'=6) & (p'=0);
		[] (s=0) & (p=1) -> 1.0 : (s'=7) & (p'=0);
		[] (s=0) & (p=1) -> 1.0 : (s'=9) & (p'=0);
		[] (s=0) & (p=1) -> 1.0 : (s'=12) & (p'=1);
		[] (s=0) & (p=1) -> 1.0 : (s'=10) & (p'=1);
		[notrap] (s=11) & (p=0) -> 1.0 : (s'=13) & (p'=0);
		[notrap] (s=1) & (p=0) -> 1.0 : (s'=1) & (p'=1);
		[trap] (s=1) & (p=0) -> 0.7638249192048344 : (s'=11) & (p'=0) + 0.2361750807951656 : (s'=1) & (p'=1);
		[] (s=1) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=1) & (p=1) -> 1.0 : (s'=6) & (p'=0);
		[] (s=1) & (p=1) -> 1.0 : (s'=7) & (p'=0);
		[] (s=1) & (p=1) -> 1.0 : (s'=9) & (p'=0);
		[] (s=1) & (p=1) -> 1.0 : (s'=12) & (p'=1);
		[] (s=2) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=2) & (p=1) -> 1.0 : (s'=2) & (p'=0);
		[] (s=2) & (p=1) -> 1.0 : (s'=4) & (p'=0);
		[] (s=2) & (p=1) -> 1.0 : (s'=6) & (p'=0);
		[] (s=2) & (p=1) -> 1.0 : (s'=7) & (p'=0);
		[] (s=2) & (p=1) -> 1.0 : (s'=8) & (p'=0);
		[] (s=2) & (p=1) -> 1.0 : (s'=9) & (p'=0);
		[] (s=2) & (p=1) -> 1.0 : (s'=12) & (p'=1);
		[notrap] (s=2) & (p=0) -> 1.0 : (s'=2) & (p'=1);
		[trap] (s=2) & (p=0) -> 0.5665784095771891 : (s'=11) & (p'=0) + 0.433421590422811 : (s'=2) & (p'=1);
		[notrap] (s=4) & (p=0) -> 1.0 : (s'=4) & (p'=1);
		[trap] (s=4) & (p=0) -> 0.962344943307746 : (s'=11) & (p'=0) + 0.03765505669225394 : (s'=4) & (p'=1);
		[notrap] (s=6) & (p=0) -> 1.0 : (s'=6) & (p'=1);
		[trap] (s=6) & (p=0) -> 0.8430869271791246 : (s'=11) & (p'=0) + 0.15691307282087552 : (s'=6) & (p'=1);
		[notrap] (s=7) & (p=0) -> 1.0 : (s'=7) & (p'=1);
		[trap] (s=7) & (p=0) -> 1.0 : (s'=11) & (p'=0) + 0.0 : (s'=7) & (p'=1);
		[notrap] (s=8) & (p=0) -> 1.0 : (s'=8) & (p'=1);
		[trap] (s=8) & (p=0) -> 0.8392982480242912 : (s'=11) & (p'=0) + 0.1607017519757089 : (s'=8) & (p'=1);
		[notrap] (s=9) & (p=0) -> 1.0 : (s'=9) & (p'=1);
		[trap] (s=9) & (p=0) -> 0.5544680668027357 : (s'=11) & (p'=0) + 0.44553193319726425 : (s'=9) & (p'=1);
		[] (s=12) & (p=1) -> 1.0 : (s'=13) & (p'=1);
		[notrap] (s=3) & (p=0) -> 1.0 : (s'=3) & (p'=1);
		[trap] (s=3) & (p=0) -> 0.6432853755640094 : (s'=11) & (p'=0) + 0.3567146244359906 : (s'=3) & (p'=1);
		[] (s=10) & (p=1) -> 1.0 : (s'=13) & (p'=1);
		[] (s=9) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=9) & (p=1) -> 1.0 : (s'=6) & (p'=0);
		[] (s=9) & (p=1) -> 1.0 : (s'=7) & (p'=0);
		[] (s=9) & (p=1) -> 1.0 : (s'=9) & (p'=0);
		[] (s=9) & (p=1) -> 1.0 : (s'=12) & (p'=1);
		[] (s=7) & (p=1) -> 1.0 : (s'=2) & (p'=0);
		[] (s=7) & (p=1) -> 1.0 : (s'=3) & (p'=0);
		[] (s=7) & (p=1) -> 1.0 : (s'=4) & (p'=0);
		[] (s=7) & (p=1) -> 1.0 : (s'=6) & (p'=0);
		[] (s=7) & (p=1) -> 1.0 : (s'=9) & (p'=0);
		[] (s=7) & (p=1) -> 1.0 : (s'=12) & (p'=1);
		[] (s=7) & (p=1) -> 1.0 : (s'=10) & (p'=1);
		[] (s=6) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=6) & (p=1) -> 1.0 : (s'=2) & (p'=0);
		[] (s=6) & (p=1) -> 1.0 : (s'=3) & (p'=0);
		[] (s=6) & (p=1) -> 1.0 : (s'=6) & (p'=0);
		[] (s=6) & (p=1) -> 1.0 : (s'=12) & (p'=1);
		[] (s=6) & (p=1) -> 1.0 : (s'=10) & (p'=1);
		[] (s=8) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=8) & (p=1) -> 1.0 : (s'=2) & (p'=0);
		[] (s=8) & (p=1) -> 1.0 : (s'=3) & (p'=0);
		[] (s=8) & (p=1) -> 1.0 : (s'=6) & (p'=0);
		[] (s=8) & (p=1) -> 1.0 : (s'=12) & (p'=1);
		[] (s=8) & (p=1) -> 1.0 : (s'=10) & (p'=1);
		[] (s=4) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=4) & (p=1) -> 1.0 : (s'=6) & (p'=0);
		[] (s=4) & (p=1) -> 1.0 : (s'=7) & (p'=0);
		[] (s=4) & (p=1) -> 1.0 : (s'=9) & (p'=0);
		[] (s=4) & (p=1) -> 1.0 : (s'=12) & (p'=1);
		[] (s=4) & (p=1) -> 1.0 : (s'=10) & (p'=1);
		[] (s=3) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=3) & (p=1) -> 1.0 : (s'=2) & (p'=0);
		[] (s=3) & (p=1) -> 1.0 : (s'=3) & (p'=0);
		[] (s=3) & (p=1) -> 1.0 : (s'=6) & (p'=0);
		[] (s=3) & (p=1) -> 1.0 : (s'=7) & (p'=0);
		[] (s=3) & (p=1) -> 1.0 : (s'=8) & (p'=0);
		[] (s=3) & (p=1) -> 1.0 : (s'=9) & (p'=0);
		[] (s=3) & (p=1) -> 1.0 : (s'=12) & (p'=1);
		[] (s=3) & (p=1) -> 1.0 : (s'=10) & (p'=1);
endmodule

rewards "targetreached"
	s=n : 1;
endrewards

rewards "trapped"
	s=n+1 : 1;
endrewards

rewards "cost"
	[trap] true : 5;
	[notrap] true : 0;
endrewards

