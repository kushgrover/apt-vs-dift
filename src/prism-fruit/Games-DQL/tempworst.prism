smg

const int n = 10;

global s: [0 .. (n+3)];
global p: [0 .. 1];

player defender
	[trap], [notrap]
endplayer

player attacker
	game
endplayer

module game
		[notrap] (s=0) & (p=0) -> 1.0 : (s'=0) & (p'=1);
		[trap] (s=0) & (p=0) -> 0.3863710471783064 : (s'=0) & (p'=1) + 0.6136289528216936 : (s'=11) & (p'=0);
		[] (s=0) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=0) & (p=1) -> 1.0 : (s'=3) & (p'=0);
		[] (s=0) & (p=1) -> 1.0 : (s'=6) & (p'=0);
		[] (s=0) & (p=1) -> 1.0 : (s'=7) & (p'=0);
		[] (s=0) & (p=1) -> 1.0 : (s'=9) & (p'=0);
		[] (s=0) & (p=1) -> 1.0 : (s'=12) & (p'=1);
		[] (s=0) & (p=1) -> 1.0 : (s'=10) & (p'=1);
		[notrap] (s=11) & (p=0) -> 1.0 : (s'=13) & (p'=0);
		[notrap] (s=1) & (p=0) -> 1.0 : (s'=1) & (p'=1);
		[trap] (s=1) & (p=0) -> 0.7160129301657651 : (s'=11) & (p'=0) + 0.28398706983423494 : (s'=1) & (p'=1);
		[] (s=1) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=1) & (p=1) -> 1.0 : (s'=6) & (p'=0);
		[] (s=1) & (p=1) -> 1.0 : (s'=7) & (p'=0);
		[] (s=1) & (p=1) -> 1.0 : (s'=9) & (p'=0);
		[] (s=1) & (p=1) -> 1.0 : (s'=12) & (p'=1);
		[] (s=2) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=2) & (p=1) -> 1.0 : (s'=2) & (p'=0);
		[] (s=2) & (p=1) -> 1.0 : (s'=4) & (p'=0);
		[] (s=2) & (p=1) -> 1.0 : (s'=6) & (p'=0);
		[] (s=2) & (p=1) -> 1.0 : (s'=7) & (p'=0);
		[] (s=2) & (p=1) -> 1.0 : (s'=8) & (p'=0);
		[] (s=2) & (p=1) -> 1.0 : (s'=9) & (p'=0);
		[] (s=2) & (p=1) -> 1.0 : (s'=12) & (p'=1);
		[notrap] (s=2) & (p=0) -> 1.0 : (s'=2) & (p'=1);
		[trap] (s=2) & (p=0) -> 0.4723611098925707 : (s'=11) & (p'=0) + 0.5276388901074294 : (s'=2) & (p'=1);
		[notrap] (s=4) & (p=0) -> 1.0 : (s'=4) & (p'=1);
		[trap] (s=4) & (p=0) -> 0.8004912425113249 : (s'=11) & (p'=0) + 0.19950875748867516 : (s'=4) & (p'=1);
		[notrap] (s=6) & (p=0) -> 1.0 : (s'=6) & (p'=1);
		[trap] (s=6) & (p=0) -> 0.7968971429124725 : (s'=11) & (p'=0) + 0.2031028570875275 : (s'=6) & (p'=1);
		[notrap] (s=7) & (p=0) -> 1.0 : (s'=7) & (p'=1);
		[trap] (s=7) & (p=0) -> 0.9610724606430929 : (s'=11) & (p'=0) + 0.03892753935690703 : (s'=7) & (p'=1);
		[notrap] (s=8) & (p=0) -> 1.0 : (s'=8) & (p'=1);
		[trap] (s=8) & (p=0) -> 0.6740775481540529 : (s'=11) & (p'=0) + 0.32592245184594715 : (s'=8) & (p'=1);
		[notrap] (s=9) & (p=0) -> 1.0 : (s'=9) & (p'=1);
		[trap] (s=9) & (p=0) -> 0.5052080740646632 : (s'=11) & (p'=0) + 0.49479192593533683 : (s'=9) & (p'=1);
		[] (s=12) & (p=1) -> 1.0 : (s'=13) & (p'=1);
		[notrap] (s=3) & (p=0) -> 1.0 : (s'=3) & (p'=1);
		[trap] (s=3) & (p=0) -> 0.5884133739090832 : (s'=11) & (p'=0) + 0.41158662609091684 : (s'=3) & (p'=1);
		[] (s=10) & (p=1) -> 1.0 : (s'=13) & (p'=1);
		[] (s=9) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=9) & (p=1) -> 1.0 : (s'=6) & (p'=0);
		[] (s=9) & (p=1) -> 1.0 : (s'=7) & (p'=0);
		[] (s=9) & (p=1) -> 1.0 : (s'=9) & (p'=0);
		[] (s=9) & (p=1) -> 1.0 : (s'=12) & (p'=1);
		[] (s=7) & (p=1) -> 1.0 : (s'=2) & (p'=0);
		[] (s=7) & (p=1) -> 1.0 : (s'=3) & (p'=0);
		[] (s=7) & (p=1) -> 1.0 : (s'=4) & (p'=0);
		[] (s=7) & (p=1) -> 1.0 : (s'=6) & (p'=0);
		[] (s=7) & (p=1) -> 1.0 : (s'=9) & (p'=0);
		[] (s=7) & (p=1) -> 1.0 : (s'=12) & (p'=1);
		[] (s=7) & (p=1) -> 1.0 : (s'=10) & (p'=1);
		[] (s=6) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=6) & (p=1) -> 1.0 : (s'=2) & (p'=0);
		[] (s=6) & (p=1) -> 1.0 : (s'=3) & (p'=0);
		[] (s=6) & (p=1) -> 1.0 : (s'=6) & (p'=0);
		[] (s=6) & (p=1) -> 1.0 : (s'=12) & (p'=1);
		[] (s=6) & (p=1) -> 1.0 : (s'=10) & (p'=1);
		[] (s=8) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=8) & (p=1) -> 1.0 : (s'=2) & (p'=0);
		[] (s=8) & (p=1) -> 1.0 : (s'=3) & (p'=0);
		[] (s=8) & (p=1) -> 1.0 : (s'=6) & (p'=0);
		[] (s=8) & (p=1) -> 1.0 : (s'=12) & (p'=1);
		[] (s=8) & (p=1) -> 1.0 : (s'=10) & (p'=1);
		[] (s=4) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=4) & (p=1) -> 1.0 : (s'=6) & (p'=0);
		[] (s=4) & (p=1) -> 1.0 : (s'=7) & (p'=0);
		[] (s=4) & (p=1) -> 1.0 : (s'=9) & (p'=0);
		[] (s=4) & (p=1) -> 1.0 : (s'=12) & (p'=1);
		[] (s=4) & (p=1) -> 1.0 : (s'=10) & (p'=1);
		[] (s=3) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=3) & (p=1) -> 1.0 : (s'=2) & (p'=0);
		[] (s=3) & (p=1) -> 1.0 : (s'=3) & (p'=0);
		[] (s=3) & (p=1) -> 1.0 : (s'=6) & (p'=0);
		[] (s=3) & (p=1) -> 1.0 : (s'=7) & (p'=0);
		[] (s=3) & (p=1) -> 1.0 : (s'=8) & (p'=0);
		[] (s=3) & (p=1) -> 1.0 : (s'=9) & (p'=0);
		[] (s=3) & (p=1) -> 1.0 : (s'=12) & (p'=1);
		[] (s=3) & (p=1) -> 1.0 : (s'=10) & (p'=1);
endmodule

rewards "targetreached"
	s=n : 1;
endrewards

rewards "trapped"
	s=n+1 : 1;
endrewards

rewards "cost"
	[trap] true : 5;
	[notrap] true : 0;
endrewards

