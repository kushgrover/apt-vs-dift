smg

const int n = 29;

global s: [0 .. (n+3)];
global p: [0 .. 1];

player defender
	[trap], [notrap]
endplayer

player attacker
	game
endplayer

module game
		[notrap] (s=0) & (p=0) -> 1.0 : (s'=0) & (p'=1);
		[trap] (s=0) & (p=0) -> 0.13854393047204625 : (s'=0) & (p'=1) + 0.8614560695279538 : (s'=30) & (p'=0);
		[] (s=0) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=0) & (p=1) -> 1.0 : (s'=17) & (p'=0);
		[] (s=0) & (p=1) -> 1.0 : (s'=23) & (p'=0);
		[] (s=0) & (p=1) -> 1.0 : (s'=31) & (p'=1);
		[] (s=0) & (p=1) -> 1.0 : (s'=29) & (p'=1);
		[notrap] (s=30) & (p=0) -> 1.0 : (s'=32) & (p'=0);
		[notrap] (s=1) & (p=0) -> 1.0 : (s'=1) & (p'=1);
		[trap] (s=1) & (p=0) -> 0.9322565818108722 : (s'=30) & (p'=0) + 0.06774341818912775 : (s'=1) & (p'=1);
		[] (s=1) & (p=1) -> 1.0 : (s'=2) & (p'=0);
		[] (s=1) & (p=1) -> 1.0 : (s'=3) & (p'=0);
		[] (s=1) & (p=1) -> 1.0 : (s'=5) & (p'=0);
		[] (s=1) & (p=1) -> 1.0 : (s'=10) & (p'=0);
		[] (s=1) & (p=1) -> 1.0 : (s'=13) & (p'=0);
		[] (s=1) & (p=1) -> 1.0 : (s'=23) & (p'=0);
		[] (s=1) & (p=1) -> 1.0 : (s'=24) & (p'=0);
		[] (s=1) & (p=1) -> 1.0 : (s'=31) & (p'=1);
		[notrap] (s=2) & (p=0) -> 1.0 : (s'=2) & (p'=1);
		[trap] (s=2) & (p=0) -> 0.8057845295656371 : (s'=30) & (p'=0) + 0.194215470434363 : (s'=2) & (p'=1);
		[notrap] (s=3) & (p=0) -> 1.0 : (s'=3) & (p'=1);
		[trap] (s=3) & (p=0) -> 0.6915840292075518 : (s'=30) & (p'=0) + 0.3084159707924482 : (s'=3) & (p'=1);
		[notrap] (s=5) & (p=0) -> 1.0 : (s'=5) & (p'=1);
		[trap] (s=5) & (p=0) -> 0.8502238772414358 : (s'=30) & (p'=0) + 0.14977612275856428 : (s'=5) & (p'=1);
		[notrap] (s=10) & (p=0) -> 1.0 : (s'=10) & (p'=1);
		[trap] (s=10) & (p=0) -> 0.724248701732041 : (s'=30) & (p'=0) + 0.27575129826795897 : (s'=10) & (p'=1);
		[notrap] (s=13) & (p=0) -> 1.0 : (s'=13) & (p'=1);
		[trap] (s=13) & (p=0) -> 0.7695095602542551 : (s'=30) & (p'=0) + 0.23049043974574487 : (s'=13) & (p'=1);
		[notrap] (s=23) & (p=0) -> 1.0 : (s'=23) & (p'=1);
		[trap] (s=23) & (p=0) -> 0.9450452873156939 : (s'=30) & (p'=0) + 0.054954712684306135 : (s'=23) & (p'=1);
		[notrap] (s=24) & (p=0) -> 1.0 : (s'=24) & (p'=1);
		[trap] (s=24) & (p=0) -> 0.8620021570881713 : (s'=30) & (p'=0) + 0.13799784291182876 : (s'=24) & (p'=1);
		[] (s=31) & (p=1) -> 1.0 : (s'=32) & (p'=1);
		[notrap] (s=17) & (p=0) -> 1.0 : (s'=17) & (p'=1);
		[trap] (s=17) & (p=0) -> 0.8262295078852212 : (s'=30) & (p'=0) + 0.17377049211477874 : (s'=17) & (p'=1);
		[] (s=29) & (p=1) -> 1.0 : (s'=32) & (p'=1);
		[] (s=23) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=23) & (p=1) -> 1.0 : (s'=2) & (p'=0);
		[] (s=23) & (p=1) -> 1.0 : (s'=8) & (p'=0);
		[] (s=23) & (p=1) -> 1.0 : (s'=9) & (p'=0);
		[] (s=23) & (p=1) -> 1.0 : (s'=13) & (p'=0);
		[] (s=23) & (p=1) -> 1.0 : (s'=14) & (p'=0);
		[] (s=23) & (p=1) -> 1.0 : (s'=17) & (p'=0);
		[] (s=23) & (p=1) -> 1.0 : (s'=19) & (p'=0);
		[] (s=23) & (p=1) -> 1.0 : (s'=22) & (p'=0);
		[] (s=23) & (p=1) -> 1.0 : (s'=31) & (p'=1);
		[] (s=23) & (p=1) -> 1.0 : (s'=29) & (p'=1);
		[] (s=3) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=3) & (p=1) -> 1.0 : (s'=31) & (p'=1);
		[] (s=2) & (p=1) -> 1.0 : (s'=6) & (p'=0);
		[] (s=2) & (p=1) -> 1.0 : (s'=19) & (p'=0);
		[] (s=2) & (p=1) -> 1.0 : (s'=31) & (p'=1);
		[notrap] (s=6) & (p=0) -> 1.0 : (s'=6) & (p'=1);
		[trap] (s=6) & (p=0) -> 0.8371162158266477 : (s'=30) & (p'=0) + 0.16288378417335234 : (s'=6) & (p'=1);
		[notrap] (s=19) & (p=0) -> 1.0 : (s'=19) & (p'=1);
		[trap] (s=19) & (p=0) -> 0.8918717310350165 : (s'=30) & (p'=0) + 0.10812826896498355 : (s'=19) & (p'=1);
		[notrap] (s=8) & (p=0) -> 1.0 : (s'=8) & (p'=1);
		[trap] (s=8) & (p=0) -> 0.733696296940092 : (s'=30) & (p'=0) + 0.266303703059908 : (s'=8) & (p'=1);
		[notrap] (s=9) & (p=0) -> 1.0 : (s'=9) & (p'=1);
		[trap] (s=9) & (p=0) -> 0.6879182880548762 : (s'=30) & (p'=0) + 0.31208171194512374 : (s'=9) & (p'=1);
		[notrap] (s=14) & (p=0) -> 1.0 : (s'=14) & (p'=1);
		[trap] (s=14) & (p=0) -> 0.8740656841048389 : (s'=30) & (p'=0) + 0.12593431589516113 : (s'=14) & (p'=1);
		[notrap] (s=22) & (p=0) -> 1.0 : (s'=22) & (p'=1);
		[trap] (s=22) & (p=0) -> 0.716067954418755 : (s'=30) & (p'=0) + 0.28393204558124496 : (s'=22) & (p'=1);
		[] (s=19) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=19) & (p=1) -> 1.0 : (s'=17) & (p'=0);
		[] (s=19) & (p=1) -> 1.0 : (s'=20) & (p'=0);
		[] (s=19) & (p=1) -> 1.0 : (s'=23) & (p'=0);
		[] (s=19) & (p=1) -> 1.0 : (s'=31) & (p'=1);
		[] (s=19) & (p=1) -> 1.0 : (s'=29) & (p'=1);
		[notrap] (s=20) & (p=0) -> 1.0 : (s'=20) & (p'=1);
		[trap] (s=20) & (p=0) -> 0.6070660479759153 : (s'=30) & (p'=0) + 0.3929339520240846 : (s'=20) & (p'=1);
		[] (s=17) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=17) & (p=1) -> 1.0 : (s'=2) & (p'=0);
		[] (s=17) & (p=1) -> 1.0 : (s'=6) & (p'=0);
		[] (s=17) & (p=1) -> 1.0 : (s'=13) & (p'=0);
		[] (s=17) & (p=1) -> 1.0 : (s'=14) & (p'=0);
		[] (s=17) & (p=1) -> 1.0 : (s'=15) & (p'=0);
		[] (s=17) & (p=1) -> 1.0 : (s'=23) & (p'=0);
		[] (s=17) & (p=1) -> 1.0 : (s'=31) & (p'=1);
		[] (s=17) & (p=1) -> 1.0 : (s'=29) & (p'=1);
		[notrap] (s=15) & (p=0) -> 1.0 : (s'=15) & (p'=1);
		[trap] (s=15) & (p=0) -> 0.7837639298392429 : (s'=30) & (p'=0) + 0.21623607016075713 : (s'=15) & (p'=1);
		[] (s=15) & (p=1) -> 1.0 : (s'=16) & (p'=0);
		[] (s=15) & (p=1) -> 1.0 : (s'=31) & (p'=1);
		[notrap] (s=16) & (p=0) -> 1.0 : (s'=16) & (p'=1);
		[trap] (s=16) & (p=0) -> 0.8018074074181624 : (s'=30) & (p'=0) + 0.19819259258183766 : (s'=16) & (p'=1);
		[] (s=13) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=13) & (p=1) -> 1.0 : (s'=2) & (p'=0);
		[] (s=13) & (p=1) -> 1.0 : (s'=6) & (p'=0);
		[] (s=13) & (p=1) -> 1.0 : (s'=16) & (p'=0);
		[] (s=13) & (p=1) -> 1.0 : (s'=17) & (p'=0);
		[] (s=13) & (p=1) -> 1.0 : (s'=23) & (p'=0);
		[] (s=13) & (p=1) -> 1.0 : (s'=31) & (p'=1);
		[] (s=13) & (p=1) -> 1.0 : (s'=29) & (p'=1);
		[] (s=9) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=9) & (p=1) -> 1.0 : (s'=23) & (p'=0);
		[] (s=9) & (p=1) -> 1.0 : (s'=31) & (p'=1);
		[] (s=5) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=5) & (p=1) -> 1.0 : (s'=31) & (p'=1);
		[] (s=24) & (p=1) -> 1.0 : (s'=31) & (p'=1);
		[] (s=22) & (p=1) -> 1.0 : (s'=17) & (p'=0);
		[] (s=22) & (p=1) -> 1.0 : (s'=23) & (p'=0);
		[] (s=22) & (p=1) -> 1.0 : (s'=31) & (p'=1);
		[] (s=22) & (p=1) -> 1.0 : (s'=29) & (p'=1);
		[] (s=20) & (p=1) -> 1.0 : (s'=31) & (p'=1);
		[] (s=16) & (p=1) -> 1.0 : (s'=31) & (p'=1);
		[] (s=14) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=14) & (p=1) -> 1.0 : (s'=17) & (p'=0);
		[] (s=14) & (p=1) -> 1.0 : (s'=23) & (p'=0);
		[] (s=14) & (p=1) -> 1.0 : (s'=31) & (p'=1);
		[] (s=14) & (p=1) -> 1.0 : (s'=29) & (p'=1);
		[] (s=10) & (p=1) -> 1.0 : (s'=23) & (p'=0);
		[] (s=10) & (p=1) -> 1.0 : (s'=31) & (p'=1);
		[] (s=8) & (p=1) -> 1.0 : (s'=17) & (p'=0);
		[] (s=8) & (p=1) -> 1.0 : (s'=23) & (p'=0);
		[] (s=8) & (p=1) -> 1.0 : (s'=31) & (p'=1);
		[] (s=8) & (p=1) -> 1.0 : (s'=29) & (p'=1);
		[] (s=6) & (p=1) -> 1.0 : (s'=19) & (p'=0);
		[] (s=6) & (p=1) -> 1.0 : (s'=31) & (p'=1);
endmodule

rewards "targetreached"
	s=n : 1;
endrewards

rewards "trapped"
	s=n+1 : 1;
endrewards

rewards "cost"
	[trap] true : 1;
	[notrap] true : 0;
endrewards

