smg

const int n = 29;
global s: [0 .. (n+3)];    	// order: d, tau, phi
global p: [0 .. 1];

player defender
	[trap], [notrap]
endplayer

player attacker
	game, [dropout], [target]
endplayer

module game
	// defender actions
	[notrap] s<=n-1 & p=0 -> (p'=1);
	[trap] s=0 & p=0 -> 0.8707620925931339 : (s'=n+1) + 0.12923790740686614 : (p'=1);
	[trap] s=1 & p=0 -> 0.9620093177409809 : (s'=n+1) + 0.03799068225901914 : (p'=1);
	[trap] s=2 & p=0 -> 0.8593850927659088 : (s'=n+1) + 0.1406149072340912 : (p'=1);
	[trap] s=3 & p=0 -> 0.8185835558986964 : (s'=n+1) + 0.18141644410130364 : (p'=1);
	[trap] s=4 & p=0 -> 0.9542581517454799 : (s'=n+1) + 0.0457418482545201 : (p'=1);
	[trap] s=5 & p=0 -> 0.951303574324699 : (s'=n+1) + 0.04869642567530097 : (p'=1);
	[trap] s=6 & p=0 -> 0.9244172975190884 : (s'=n+1) + 0.07558270248091159 : (p'=1);
	[trap] s=7 & p=0 -> 0.8936925136753726 : (s'=n+1) + 0.10630748632462739 : (p'=1);
	[trap] s=8 & p=0 -> 0.8560448055795654 : (s'=n+1) + 0.14395519442043458 : (p'=1);
	[trap] s=9 & p=0 -> 0.8426575970726861 : (s'=n+1) + 0.15734240292731394 : (p'=1);
	[trap] s=10 & p=0 -> 0.8722160712967532 : (s'=n+1) + 0.12778392870324684 : (p'=1);
	[trap] s=11 & p=0 -> 0.8357531710282173 : (s'=n+1) + 0.16424682897178267 : (p'=1);
	[trap] s=12 & p=0 -> 0.8611516232920554 : (s'=n+1) + 0.1388483767079446 : (p'=1);
	[trap] s=13 & p=0 -> 0.8581995972216031 : (s'=n+1) + 0.1418004027783969 : (p'=1);
	[trap] s=14 & p=0 -> 0.9448007068871331 : (s'=n+1) + 0.055199293112866865 : (p'=1);
	[trap] s=15 & p=0 -> 0.8783772011044948 : (s'=n+1) + 0.1216227988955052 : (p'=1);
	[trap] s=16 & p=0 -> 0.948657430407279 : (s'=n+1) + 0.05134256959272099 : (p'=1);
	[trap] s=17 & p=0 -> 0.8574108491904633 : (s'=n+1) + 0.1425891508095367 : (p'=1);
	[trap] s=18 & p=0 -> 0.830474166470382 : (s'=n+1) + 0.16952583352961803 : (p'=1);
	[trap] s=19 & p=0 -> 0.9855273700348335 : (s'=n+1) + 0.014472629965166517 : (p'=1);
	[trap] s=20 & p=0 -> 0.8763858198371215 : (s'=n+1) + 0.1236141801628785 : (p'=1);
	[trap] s=21 & p=0 -> 0.827419890115007 : (s'=n+1) + 0.17258010988499295 : (p'=1);
	[trap] s=22 & p=0 -> 0.8645039049944796 : (s'=n+1) + 0.1354960950055204 : (p'=1);
	[trap] s=23 & p=0 -> 0.9770931800116519 : (s'=n+1) + 0.022906819988348093 : (p'=1);
	[trap] s=24 & p=0 -> 0.9689291620070801 : (s'=n+1) + 0.031070837992919875 : (p'=1);
	[trap] s=25 & p=0 -> 0.8999844911474343 : (s'=n+1) + 0.10001550885256572 : (p'=1);
	[trap] s=26 & p=0 -> 0.9884314726877825 : (s'=n+1) + 0.01156852731221747 : (p'=1);
	[trap] s=27 & p=0 -> 0.9233848587312348 : (s'=n+1) + 0.07661514126876523 : (p'=1);
	[trap] s=28 & p=0 -> 0.8569351685930389 : (s'=n+1) + 0.14306483140696113 : (p'=1);

	// sink transitions
	[] s=n -> (s'=n+3);
	[] s=n+1 -> (s'=n+3);
	[] s=n+2 -> (s'=n+3);

	// attacker actions
	[dropout] s<=n-1 & p=1 -> (s'=n+2);
	[] (s=0 | s=3 | s=4 | s=5 | s=9 | s=11 | s=13 | s=14 | s=17 | s=18 | s=19 | s=21 | s=23) & p=1 -> (s'=1) & (p'=0);
	[] (s=1 | s=7 | s=13 | s=17 | s=18 | s=23) & p=1 -> (s'=2) & (p'=0);
	[] (s=1) & p=1 -> (s'=3) & (p'=0);
	[] (s=1) & p=1 -> (s'=5) & (p'=0);
	[] (s=2 | s=13 | s=17) & p=1 -> (s'=6) & (p'=0);
	[] (s=23) & p=1 -> (s'=8) & (p'=0);
	[] (s=23) & p=1 -> (s'=9) & (p'=0);
	[] (s=1) & p=1 -> (s'=10) & (p'=0);
	[] (s=1 | s=17 | s=23) & p=1 -> (s'=13) & (p'=0);
	[] (s=17 | s=23) & p=1 -> (s'=14) & (p'=0);
	[] (s=12 | s=17 | s=21) & p=1 -> (s'=15) & (p'=0);
	[] (s=13 | s=15) & p=1 -> (s'=16) & (p'=0);
	[] (s=0 | s=4 | s=8 | s=12 | s=13 | s=14 | s=18 | s=19 | s=21 | s=22 | s=23 | s=25) & p=1 -> (s'=17) & (p'=0);
	[] (s=2 | s=6 | s=23) & p=1 -> (s'=19) & (p'=0);
	[] (s=19) & p=1 -> (s'=20) & (p'=0);
	[] (s=23) & p=1 -> (s'=22) & (p'=0);
	[] (s=0 | s=1 | s=8 | s=9 | s=10 | s=12 | s=13 | s=14 | s=17 | s=18 | s=19 | s=21 | s=22 | s=25 | s=26) & p=1 -> (s'=23) & (p'=0);
	[] (s=1) & p=1 -> (s'=24) & (p'=0);
	[target] (s=0 | s=8 | s=12 | s=13 | s=14 | s=17 | s=18 | s=19 | s=21 | s=22 | s=23 | s=25 | s=27) & p=1 -> (s'=n);
endmodule

rewards "targetreached"
	s=n : 1;
endrewards

rewards "trapped"
	s=n+1 : 1;
endrewards

rewards "cost"
	[trap] true: 1;
	[notrap] true: 0;
endrewards

