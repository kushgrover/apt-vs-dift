smg

const int n = 9;

global s: [0 .. (n+3)];
global p: [0 .. 1];

player defender
	[trap], [notrap]
endplayer

player attacker
	game
endplayer

module game
		[notrap] (s=0) & (p=0) -> 1.0 : (s'=0) & (p'=1);
		[trap] (s=0) & (p=0) -> 0.11059190806307063 : (s'=0) & (p'=1) + 0.8894080919369294 : (s'=10) & (p'=0);
		[] (s=0) & (p=1) -> 1.0 : (s'=1) & (p'=0);
		[] (s=0) & (p=1) -> 1.0 : (s'=3) & (p'=0);
		[] (s=0) & (p=1) -> 1.0 : (s'=5) & (p'=0);
		[] (s=0) & (p=1) -> 1.0 : (s'=7) & (p'=0);
		[] (s=0) & (p=1) -> 1.0 : (s'=8) & (p'=0);
		[] (s=0) & (p=1) -> 1.0 : (s'=11) & (p'=1);
		[] (s=0) & (p=1) -> 1.0 : (s'=9) & (p'=1);
		[notrap] (s=10) & (p=0) -> 1.0 : (s'=12) & (p'=0);
		[notrap] (s=1) & (p=0) -> 1.0 : (s'=1) & (p'=1);
		[trap] (s=1) & (p=0) -> 0.7063773008722918 : (s'=10) & (p'=0) + 0.2936226991277082 : (s'=1) & (p'=1);
		[] (s=1) & (p=1) -> 1.0 : (s'=2) & (p'=0);
		[] (s=1) & (p=1) -> 1.0 : (s'=5) & (p'=0);
		[] (s=1) & (p=1) -> 1.0 : (s'=6) & (p'=0);
		[] (s=1) & (p=1) -> 1.0 : (s'=7) & (p'=0);
		[] (s=1) & (p=1) -> 1.0 : (s'=8) & (p'=0);
		[] (s=1) & (p=1) -> 1.0 : (s'=11) & (p'=1);
		[notrap] (s=2) & (p=0) -> 1.0 : (s'=2) & (p'=1);
		[trap] (s=2) & (p=0) -> 0.9960242227436213 : (s'=10) & (p'=0) + 0.003975777256378613 : (s'=2) & (p'=1);
		[notrap] (s=5) & (p=0) -> 1.0 : (s'=5) & (p'=1);
		[trap] (s=5) & (p=0) -> 0.7605472107386527 : (s'=10) & (p'=0) + 0.23945278926134736 : (s'=5) & (p'=1);
		[notrap] (s=6) & (p=0) -> 1.0 : (s'=6) & (p'=1);
		[trap] (s=6) & (p=0) -> 0.8744334532386103 : (s'=10) & (p'=0) + 0.12556654676138973 : (s'=6) & (p'=1);
		[notrap] (s=7) & (p=0) -> 1.0 : (s'=7) & (p'=1);
		[trap] (s=7) & (p=0) -> 1.0 : (s'=10) & (p'=0) + 0.0 : (s'=7) & (p'=1);
		[notrap] (s=8) & (p=0) -> 1.0 : (s'=8) & (p'=1);
		[trap] (s=8) & (p=0) -> 1.0 : (s'=10) & (p'=0) + 0.0 : (s'=8) & (p'=1);
		[] (s=11) & (p=1) -> 1.0 : (s'=12) & (p'=1);
		[notrap] (s=3) & (p=0) -> 1.0 : (s'=3) & (p'=1);
		[trap] (s=3) & (p=0) -> 0.5679679002669299 : (s'=10) & (p'=0) + 0.4320320997330701 : (s'=3) & (p'=1);
		[] (s=9) & (p=1) -> 1.0 : (s'=12) & (p'=1);
		[] (s=8) & (p=1) -> 1.0 : (s'=11) & (p'=1);
		[] (s=7) & (p=1) -> 1.0 : (s'=8) & (p'=0);
		[] (s=7) & (p=1) -> 1.0 : (s'=11) & (p'=1);
		[] (s=7) & (p=1) -> 1.0 : (s'=9) & (p'=1);
		[] (s=6) & (p=1) -> 1.0 : (s'=8) & (p'=0);
		[] (s=6) & (p=1) -> 1.0 : (s'=11) & (p'=1);
		[] (s=6) & (p=1) -> 1.0 : (s'=9) & (p'=1);
		[] (s=5) & (p=1) -> 1.0 : (s'=6) & (p'=0);
		[] (s=5) & (p=1) -> 1.0 : (s'=8) & (p'=0);
		[] (s=5) & (p=1) -> 1.0 : (s'=11) & (p'=1);
		[] (s=3) & (p=1) -> 1.0 : (s'=4) & (p'=0);
		[] (s=3) & (p=1) -> 1.0 : (s'=6) & (p'=0);
		[] (s=3) & (p=1) -> 1.0 : (s'=7) & (p'=0);
		[] (s=3) & (p=1) -> 1.0 : (s'=8) & (p'=0);
		[] (s=3) & (p=1) -> 1.0 : (s'=11) & (p'=1);
		[] (s=3) & (p=1) -> 1.0 : (s'=9) & (p'=1);
		[notrap] (s=4) & (p=0) -> 1.0 : (s'=4) & (p'=1);
		[trap] (s=4) & (p=0) -> 0.7543776559718623 : (s'=10) & (p'=0) + 0.2456223440281376 : (s'=4) & (p'=1);
		[] (s=2) & (p=1) -> 1.0 : (s'=5) & (p'=0);
		[] (s=2) & (p=1) -> 1.0 : (s'=6) & (p'=0);
		[] (s=2) & (p=1) -> 1.0 : (s'=7) & (p'=0);
		[] (s=2) & (p=1) -> 1.0 : (s'=8) & (p'=0);
		[] (s=2) & (p=1) -> 1.0 : (s'=11) & (p'=1);
		[] (s=2) & (p=1) -> 1.0 : (s'=9) & (p'=1);
		[] (s=4) & (p=1) -> 1.0 : (s'=5) & (p'=0);
		[] (s=4) & (p=1) -> 1.0 : (s'=8) & (p'=0);
		[] (s=4) & (p=1) -> 1.0 : (s'=11) & (p'=1);
		[] (s=4) & (p=1) -> 1.0 : (s'=9) & (p'=1);
endmodule

rewards "targetreached"
	s=n : 1;
endrewards

rewards "trapped"
	s=n+1 : 1;
endrewards

rewards "cost"
	[trap] true : 1;
	[notrap] true : 0;
endrewards

